# Makefile.in generated by automake 1.10 from Makefile.am.
# doc/docbook/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- makefile -*-
# Generic rules for installation and distribution of documentation.
#
# Parameters :
# HTML_DOCS list of html documentation directories
# PDF_DOCS list of pdf files
# PS_DOCS list of ps files
#
# HTML_DOCSDIR: where directories listed in HTML_DOCS should be taken from (this
# can be from . or from a directory containing pre-generated versions)
#
# PDF_DOCSDIR & PS_DOCSDIR: same thing for pdf and ps files.

pkgdatadir = $(datadir)/xenomai
pkglibdir = $(libdir)/xenomai
pkgincludedir = $(includedir)/xenomai
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/catalog.in $(srcdir)/docbook.rules \
	$(top_srcdir)/doc/install-dist.rules
subdir = doc/docbook
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_prog_cc_for_build.m4 \
	$(top_srcdir)/config/docbook.m4 $(top_srcdir)/config/version \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/include/xeno_config.h
CONFIG_CLEAN_FILES = catalog
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/config/missing --run aclocal-1.10
ADEOS_PATCH = 
AMTAR = ${SHELL} /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/config/missing --run automake-1.10
AWK = mawk
BUILD_EXEEXT = 
BUILD_OBJEXT = 
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = 
CFLAGS_FOR_BUILD = -O2
CONFIG_STATUS_DEPENDENCIES = $(top_srcdir)/src/skins/posix/posix.wrappers
CPP = gcc -E
CPPFLAGS = 
CPPFLAGS_FOR_BUILD = 
CPP_FOR_BUILD = gcc -E
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DBX_DOC_ROOT = doc/docbook
DBX_FOP = 
DBX_GEN_DOC_ROOT = doc/generated
DBX_LINT = xmllint
DBX_MAYBE_NONET = --nonet
DBX_ROOT = file:///usr/share/sgml/docbook/dtd/xml/4.2
DBX_XSLTPROC = xsltproc
DBX_XSL_ROOT = http://http://docbook.sourceforge.net/release/xsl/current
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = 
DOXYGEN_HAVE_DOT = NO
DOXYGEN_SHOW_INCLUDE_FILES = YES
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LATEX_BATCHMODE = YES
LATEX_MODE = batchmode
LDFLAGS = 
LD_FILE_OPTION = yes
LEX = ${SHELL} /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/config/missing --run flex
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LNDIR = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = xenomai
PACKAGE_BUGREPORT = xenomai-help@gna.org
PACKAGE_NAME = Xenomai
PACKAGE_STRING = Xenomai 2.4.2
PACKAGE_TARNAME = xenomai
PACKAGE_VERSION = 2.4.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.4.2
XENO_BUILD_STRING = i686-pc-linux-gnu
XENO_HOST_STRING = i686-pc-linux-gnu
XENO_LINUX_ALL_TARGETS = 
XENO_LINUX_ARCH = i386
XENO_LINUX_IMAGE = 
XENO_LINUX_INSTALL_TARGET = install
XENO_MAYBE_DOCDIR = doc
XENO_POSIX_WRAPPERS = -Wl,@/home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/src/skins/posix/posix.wrappers
XENO_TARGET_ARCH = x86
XENO_USER_APP_CFLAGS = -D_GNU_SOURCE -D_REENTRANT
XENO_USER_APP_LDFLAGS = 
XENO_USER_CFLAGS = -O2 -D_GNU_SOURCE -D_REENTRANT -Wall -pipe -fstrict-aliasing -Wno-strict-aliasing -D__XENO__ -D__IN_XENO__ -Wstrict-prototypes
XENO_USER_LDFLAGS = 
abs_builddir = /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/doc/docbook
abs_srcdir = /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/doc/docbook
abs_top_builddir = /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2
abs_top_srcdir = /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2
ac_ct_CC = gcc
ac_ct_CC_FOR_BUILD = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = $(datadir)/doc/$(PACKAGE)-$(VERSION)
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/dc/svn/libbarrett/dependencies/xenomai-2.4.2/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/xenomai
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_builddir = ../..
top_srcdir = ../..
SUBDIRS = custom-stylesheets xenomai

# -*- makefile -*-
dbx_docdir = $(datadir)/doc/$(PACKAGE)-$(VERSION)
dbx_top_distdir = $(doc_top_distdir)
DBX_SRC_ROOT = $(top_srcdir)/$(DBX_DOC_ROOT)
DBX_BUILD_ROOT = $(top_builddir)/$(DBX_DOC_ROOT)
DBX_DIST_ROOT = $(dbx_top_distdir)/$(DBX_GEN_DOC_ROOT)
DBX_XSLTPROC_FLAGS = --catalogs --xinclude $(DBX_MAYBE_NONET)
DBX_HTML_TRANSFORM = cat
#DBX_HTML_TRANSFORM = sed "s,\(src\|href\)=\"$(esc_html_srcroot),\1=\"..,g"
HTML_DOCSDIR = $(top_srcdir)/$(DBX_GEN_DOC_ROOT)/html/
#HTML_DOCSDIR = ./
PDF_DOCSDIR = $(top_srcdir)/$(DBX_GEN_DOC_ROOT)/pdf/
#PDF_DOCSDIR = ./
#html_srcroot = ../$(DBX_SRC_ROOT)

# How to find the Docbook XML source root from an HTML subdir depends on whether
# $(top_srcdir) is an absolute or relative path, which is tested by configure
# and exported in the automake conditional DBX_ABS_SRCDIR.
##html_srcroot = $(DBX_SRC_ROOT)

# So as to have HTML documents browseable in the build directory, they make
# reference to pictures and CSS in the sources directory. But when installing,
# pictures and CSS are installed too, so the HTML documents have to be
# transformed in order to make reference to the installed pictures and
# CSS. This is what the variable DBX_HTML_TRANSFORM is used for.
#esc_html_srcroot = $(subst .,\.,$(html_srcroot))
#DBX_SGML_CATALOG_FILES = $(DBX_BUILD_ROOT)/catalog
DBX_ALL_HTML = $(DBX_HTML_DOCS) $(DBX_HTML_EXTRA)

# installation and distribution of pdf files: use generic rules.
PDF_DOCS = $(DBX_PDF_DOCS)
doc_top_distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)
GEN_DOC_DIST_ROOT = $(doc_top_distdir)/doc/generated
DBX_HTML_EXTRA = css pictures
EXTRA_DIST = css pictures
all: all-recursive

.SUFFIXES:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/docbook.rules $(top_srcdir)/doc/install-dist.rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  doc/docbook/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  doc/docbook/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
catalog: $(top_builddir)/config.status $(srcdir)/catalog.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-recursive
all-local:
all-am: Makefile all-local
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-local:
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-recursive

install-exec-am:

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-local

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local check check-am clean clean-generic \
	clean-libtool clean-local ctags ctags-recursive dist-hook \
	distclean distclean-generic distclean-libtool distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-data-local \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-local


# Document validation :
# The main document has to be validated using xmllint that supports
# Xinclude.
#%.xml.valid-stamp: %.xml
#	@echo Validating $@.
#	SGML_CATALOG_FILES=$(DBX_SGML_CATALOG_FILES) \
#	$(DBX_LINT) --catalogs --xinclude --noout --postvalid $< && \
#	echo timestamp > $@

# Titlepage rule.
#%.xsl: %.spec.xml
#	SGML_CATALOG_FILES=$(DBX_SGML_CATALOG_FILES) \
#	$(DBX_XSLTPROC) $(DBX_XSLTPROC_FLAGS) $(XSLTPROC_FLAGS) --output $@ \
# http://docbook.sourceforge.net/release/xsl/current/template/titlepage.xsl $<

#
# HTML
#
# We use xsltproc with a docbook-xsl stylesheet to generate the xhtml
# output.
# 
# DBX_HTML_STYLESHEET is the relative path to the docbook-xsl stylesheet. Thanks
#     to make's VPATH, it may be relative to the current build or sources
#     directory.
#
# DBX_HTML_CSS is the name of the CSS. The css file must be in the directory
#     $DBX_SRC_ROOT/css.
#
# The pictures use by the HTML document have to be in the $DBX_SRC_ROOT/pictures
#%: %.xml %.xml.valid-stamp $(DBX_HTML_STYLESHEET) FORCE
#	@echo Generating $@
#	$(mkinstalldirs) $@
#	deps="$^"; set dummy $$deps; src=$$2; stylesheet=$$4; \
#	SGML_CATALOG_FILES=$(DBX_SGML_CATALOG_FILES) \
#	$(DBX_XSLTPROC) $(DBX_XSLTPROC_FLAGS) $(XSLTPROC_FLAGS) \
#	    --stringparam html.stylesheet $(html_srcroot)/css/$(DBX_HTML_CSS) \
#	    --stringparam navig.graphics.path $(html_srcroot)/pictures/ \
#	    --stringparam admon.graphics.path $(html_srcroot)/pictures/ \
#	    --stringparam img.src.path $(html_srcroot)/pictures/ \
#	    --stringparam base.dir $@/ $$stylesheet $$src

#.PHONY: FORCE

#
# PDF
#
# We use xsltproc with a docbook-xsl stylesheet to generate the output in the
# .fo format, which is then converted to pdf by FOP.
# 
# DBX_FO_STYLESHEET is the relative path to the docbook-xsl stylesheet. Thanks
#     to make's VPATH, it may be relative to the current build or sources
#     directory.
#
#%.fo: %.xml %.xml.valid-stamp $(DBX_FO_STYLESHEET)
#	@echo Generating $@
#	deps="$^"; set dummy $$deps; src=$$2; stylesheet=$$4; \
#	SGML_CATALOG_FILES=$(DBX_SGML_CATALOG_FILES) \
#	$(DBX_XSLTPROC) $(DBX_XSLTPROC_FLAGS) $(XSLTPROC_FLAGS) --output $@ \
#		 --stringparam admon.graphics.path $(DBX_SRC_ROOT)/pictures/ \
#		 $$stylesheet $$src

#%.pdf: %.fo
#	@echo Generating $@...
#	abs_target=`pwd`/$@; abs_source=`pwd`/$<; cd $(DBX_SRC_ROOT)/pictures; \
#	$(DBX_FOP) -fo $$abs_source -pdf $$abs_target

#clean-dbx-local:
#	$(RM) -r $(DBX_HTML_DOCS) $(DBX_PDF_DOCS) *.fo *.xml.valid-stamp

#clean-local: clean-dbx-local

#.SECONDARY:

#.DELETE_ON_ERROR:

#dbx-xsl-local: $(DBX_XSL_DOCS)
#dbx-pdf-local: $(DBX_PDF_DOCS)
#dbx-html-local: $(DBX_HTML_DOCS)

#all-local: dbx-xsl-local dbx-pdf-local dbx-html-local

install-dbx-htmldocs: $(DBX_ALL_HTML:%=$(HTML_DOCSDIR)%)
	docs="$^"; abs_builddir=$$PWD; \
	for dir in $$docs; do \
	    dest=$(DESTDIR)$(dbx_docdir)/html/`basename $$dir`; \
	    $(mkinstalldirs) $$dest && abs_dest=`cd $$dest && pwd` && \
            { cd $$dir || exit 1; \
	    for f in * ; do \
	        case $$f in \
		    *~|CVS|.svn|[mM]akefile*|GNUmakefile*);; \
		    *.html|*.htm) $(DBX_HTML_TRANSFORM) $$f > $$abs_dest/$$f;; \
		    *) $(INSTALL_DATA) $$f $$abs_dest/$$f;; \
	        esac; \
	    done; cd $$abs_builddir; } \
	done

dist-dbx-htmldocs: $(DBX_ALL_HTML:%=$(HTML_DOCSDIR)%)
	docs="$^"; abs_builddir=$$PWD; \
	for dir in $$docs; do \
	    dest=$(DBX_DIST_ROOT)/html/`basename $$dir`; \
	    $(mkinstalldirs) $$dest && abs_dest=`cd $$dest && pwd` && \
            { cd $$dir || exit 1; \
	    for f in * ; do \
		case $$f in \
		    *~|CVS|.svn|[mM]akefile*|GNUmakefile*);; \
		    *.html|*.htm) $(DBX_HTML_TRANSFORM) $$f > $$abs_dest/$$f;; \
		    *) $(INSTALL_DATA) $$f $$abs_dest/$$f;; \
	        esac; \
	    done; cd $$abs_builddir; } \
	done

uninstall-dbx-htmldocs:
	if test -n "$(DBX_ALL_HTML)"; then \
	    targets="$(DBX_ALL_HTML:%=$(DESTDIR)$(docdir)/html/%)"; \
	    for t in $$targets; do \
		if test -d $$t; then $(RM) $$t/*; $(RM) -r $$t; \
		else $(RM) $$t; fi; \
	    done; \
        fi

install-htmldocs: $(HTML_DOCS:%=$(HTML_DOCSDIR)%)
	docs="$^"; abs_builddir=$$PWD; \
	for dir in $$docs; do \
	    dest=$(DESTDIR)$(docdir)/html/`basename $$dir`; \
	    $(mkinstalldirs) $$dest; \
	    abs_dest=`cd $$dest && pwd` ; \
            cd $$dir || exit 1; \
	    for f in * ; do \
	        case $$f in \
		    *~|CVS|.svn|[mM]akefile*|GNUmakefile*);; \
		    *) $(INSTALL_DATA) $$f $$abs_dest/$$f;; \
	        esac; \
	    done; cd $$abs_builddir; \
	done

install-pdfdocs: $(PDF_DOCS:%=$(PDF_DOCSDIR)%)
	docs="$^"; dest=$(DESTDIR)$(docdir)/pdf; \
	$(mkinstalldirs) $$dest && \
	for f in $$docs; do \
	    $(INSTALL_DATA) $$f $$dest; \
	done

install-psdocs: $(PS_DOCS:%=$(PS_DOCSDIR)%)
	docs="$^"; dest=$(DESTDIR)$(docdir)/ps; \
	$(mkinstalldirs) $$dest && \
	for f in $$docs; do \
	    $(INSTALL_DATA) $$f $$dest; \
	done

install-docs-local: install-htmldocs install-psdocs install-pdfdocs

dist-htmldocs: $(HTML_DOCS:%=$(HTML_DOCSDIR)%)
	docs="$^"; abs_builddir=$$PWD; \
	for dir in $$docs; do \
	    dest=$(GEN_DOC_DIST_ROOT)/html/`basename $$dir`; \
	    $(mkinstalldirs) $$dest && abs_dest=`cd $$dest && pwd` && \
            cd $$dir || exit 1; \
	    for f in * ; do \
		case $$f in \
		    *~|CVS|.svn|[mM]akefile*|GNUmakefile*);; \
		    *) $(INSTALL_DATA) $$f $$abs_dest/$$f;; \
	        esac; \
	    done; cd $$abs_builddir; \
	done

dist-pdfdocs: $(PDF_DOCS:%=$(PDF_DOCSDIR)%)
	docs="$^"; dest=$(GEN_DOC_DIST_ROOT)/pdf; \
	$(mkinstalldirs) $$dest && \
	for f in $$docs; do \
	    $(INSTALL_DATA) $$f $$dest; \
	done

dist-psdocs: $(PS_DOCS:%=$(PS_DOCSDIR)%)
	docs="$^"; dest=$(GEN_DOC_DIST_ROOT)/ps; \
	$(mkinstalldirs) $$dest && \
	for f in $$docs; do \
	    $(INSTALL_DATA) $$f $$dest; \
	done

dist-docs-hook: all-local dist-htmldocs dist-pdfdocs dist-psdocs

# To make distcheck happy.
uninstall-docs:
	if test -n "$(HTML_DOCS)" -o -n "$(PDF_DOCS)" -o -n "$(PS_DOCS)"; then \
	    targets="$(HTML_DOCS:%=$(DESTDIR)$(docdir)/html/%) \
		$(PDF_DOCS:%=$(DESTDIR)$(docdir)/pdf/%) \
		$(PS_DOCS:%=$(DESTDIR)$(docdir)/ps/%)"; \
	    for t in $$targets; do \
		if test -d $$t; then $(RM) $$t/*; $(RM) -r $$t; \
		else $(RM) $$t; fi; \
	    done; \
        fi

install-data-local: install-dbx-htmldocs install-docs-local

dist-hook: dist-dbx-htmldocs dist-docs-hook

uninstall-local: uninstall-dbx-htmldocs uninstall-docs
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
