Make instructions:
1. In wam_ros folder, make a build folder ($mkdir build)
2. Move into the build folder ($cd build)
3. Run cmake from outside folder ($cmake ..)
4. Run make ($make)
5. All executables are now stored in wam_ros/bin folder by default.

Default executables are the following:
1. WamServer- Establishes connection with actual WAM and is able to call asynchronous functions. Publishes wam state data on wam_state topic. Also advertises commands service.
2. WamViewer- Client program that just subscribes to wam_state topic and prints data in text GUI.
3. WamClient- Client program that just subscribes to commands service and issues remote function calls.
4. WamDemo- Client program that can view WAM state and issue remote function calls. Modeled after bt-wam-demo.
5. WamMoveServer- WamServer with move service
6. WamMoveClient- WamClient with move service subscription


Optional executables (uncomment in CMakefile):
1. WamJpos- Server program that only publishes joint information.
2. WamState- Server program that publishes WAM state information.
3. WamServer- Server program that allows basic function calls.


Running Nodes:
1. Start ROS Master ($roscore -p <port>). Default port number is 11311 on localhost.
2. Launch nodes ($rosrun wam_ros <executablename>)
Note: When launching any node make sure environment variable ROS_IP is NOT localhost because it won't be accessible through network. Change to inet addr in ipconfig (i.e. on Saruman, $export ROS_IP=192.168.139.66).
Note: If ROS node is unable to locate master, change environment variable ROS_MASTER_URI to location of computer running roscore (i.e. if roscore is running on Saruman, $export ROS_MASTER_URI=http://saruman:<port>).
