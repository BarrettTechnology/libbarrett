#ifndef __LIBBARRETT_CONFIG_H
#define __LIBBARRETT_CONFIG_H

#include <string>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <pwd.h>

namespace barrett {

std::string EtcPath()
{
	static const std::string barrett_home_path = "/.barrett/";

	struct stat statbuf;

	// Default to the BARRETT_ETC_PATH environment variable, if set.
	char *etc_path = std::getenv("BARRETT_ETC_PATH");
	if (stat(etc_path, &statbuf) != -1 && S_ISDIR(statbuf.st_mode)) {
		return etc_path;
	}

	// Otherwise, fall back on the ".barrett" in the HOME directory.
	char *home = std::getenv("HOME");
	if (home == NULL) {
		home = getpwuid(getuid())->pw_dir;
	}

	std::string etc_path_std = std::string(home) + barrett_home_path;
	if (stat(etc_path_std.c_str(), &statbuf) != -1 && S_ISDIR(statbuf.st_mode)) {
		return etc_path_std;
	}

	// Finally, fall back on the compile-time constant.
	return "@BARRETT_ETC_PATH@/";
}

std::string EtcPathRelative(const std::string &relpath) {
	return EtcPath() + relpath;
}

}

#endif //ifndef __LIBBARRETT_CONFIG_H
